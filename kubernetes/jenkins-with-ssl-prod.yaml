apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: jenkins-ingress
  namespace: ci 
  annotations:    
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "2g"
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
spec:
  tls:
  - hosts:
    - jenkins.ci.yourdomain.com
    secretName: jenkins-ci-yourdomain-com-ceritficate
  rules:
    - host: jenkins.ci.yourdomain.com
      http:
        paths:
        - backend:
            serviceName: jenkins-service
            servicePort: 80
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc
  namespace: ci
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: ci
spec:
  selector:
    app: jenkins
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-deployment
  namespace: ci
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      securityContext:
        fsGroup: 412
      volumes:
      - name: jenkins-persistent-storage
        persistentVolumeClaim:
          claimName: jenkins-pvc
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      initContainers:
      - name: jenkins-persistent-storage-permission-fix
        image: busybox
        command: ["/bin/chmod","-R","777", "/data"]
        volumeMounts:
        - name: jenkins-persistent-storage
          mountPath: /data
      containers:
      - name: jenkins
        image: registry.ci.yourdomain.com/ci-environment/jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: jenkins-persistent-storage
          mountPath: /var/jenkins_home
        - name: dockersock
          mountPath: "/var/run/docker.sock"
      imagePullSecrets:
        - name: registry-ci-yourdomain-com-credentials
